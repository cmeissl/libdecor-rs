var searchIndex = JSON.parse('{\
"libdecor":{"doc":"Overview","t":[18,13,13,13,18,3,13,13,13,3,13,3,13,3,13,4,18,18,3,3,4,13,13,18,18,18,13,18,4,4,13,3,18,18,18,18,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["ACTIVE","Bottom","BottomLeft","BottomRight","CLOSE","Capabilities","Close","Commit","CompositorIncompatible","Configuration","Configure","Context","DismissPopup","Error","Error","ErrorKind","FULLSCREEN","FULLSCREEN","Frame","FrameRef","FrameRequest","InvalidFrameConfiguration","Left","MAXIMIZED","MINIMIZE","MOVE","None","RESIZE","Request","ResizeEdge","Right","State","TILED_BOTTOM","TILED_LEFT","TILED_RIGHT","TILED_TOP","Top","TopLeft","TopRight","WindowState","_move","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","commit","complement","complement","contains","contains","content_size","decorate","difference","difference","dispatch","dispatch","drop","drop","empty","empty","eq","eq","extend","extend","fd","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","has_capability","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","is_floating","is_lib_available","is_visible","kind","map","ne","ne","new","new","not","not","partial_cmp","partial_cmp","popup_grab","popup_ungrab","remove","remove","resize","set","set","set_app_id","set_capabilities","set_fullscreen","set_max_content_size","set_maximized","set_min_content_size","set_minimized","set_parent","set_title","set_visibility","show_window_menu","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","toggle","translate_coordinate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","unset_capabilities","unset_fullscreen","unset_maximized","window_state","xdg_surface","xdg_toplevel","0","seat_name","0"],"q":["libdecorlibdecor::FrameRequest","","libdecor::Request"],"d":["The window is active","Bottom of the window","Bottom left corner of the window","Bottom right corner of the window","Close enabled/disabled","Capabilities of a <code>Frame</code>","The window was requested to be closed by the compositor.","The window decoration asked to have the main surface to be …","The compositor is incompatible with <code>libdecor</code>","An object representing a toplevel window configuration.","A new configuration was received. An application should …","A libdecor context instance.","Any mapped popup that has a grab on the given seat should …","An error that has occurred in a <code>Context</code>","An error event","Kind of error in a <code>Context</code>","The window is running in fullscreen mode","Fullscreen enabled/disabled","A frame used for decorating a Wayland surface.","A reference to a <code>Frame</code> used for decorating a Wayland …","Possible variants for the <code>Frame</code> callback","The frame configuration is invalid","Left side of the window","The window is maximized","Minimize enabled/disabled","Move enabled/disabled","No edge","Resize enabled/disabled","Possible variants for the <code>Context</code> callback","Defines the edge for an interactive <code>FrameRef::resize</code>","Right side of the window","An object corresponding to a configured content state.","Tiled bottom","Tiled left","Tiled right","Tiled top","Top of the window","Top left corner of the window","Top right corner of the window","The possible window states","Initiate an interactive move.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Close the window.","","","Commit a new window state. This can be called on …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Get the expected size of the content for this …","Decorate the given content <code>WlSurface</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Dispatch events. This function should be called when data …","Dispatch a call to a <code>FrameRef</code>","","","Returns an empty set of flags.","Returns an empty set of flags.","","","","","Get the file descriptor used by libdecor. This is similar …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Check whether the window has any of the given capabilities.","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Return <code>true</code> if the window is floating.","Check if the <code>libdecor</code> library is available on the system.","Get the visibility of the frame.","Returns the corresponding <code>ErrorKind</code> for this error.","Map the window.","","","Create a new libdecor context for the given <code>Display</code>.","Create a new content surface state.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Issue a popup grab on the window. Call this when a …","Release the popup grab. Call this when you unmap a popup.","Removes the specified flags in-place.","Removes the specified flags in-place.","Initiate an interactive resize.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Set the application ID of the window.","Set new capabilities of the window.","Fullscreen the window.","Set the max content size.","Maximize the window.","Set the min content size.","Minimize the window.","Set the parent of the window.","Set the title of the window.","Set the visibility of the frame.","Show the window menu.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Get the title of the window.","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Translate content surface local coordinates to toplevel …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Unset capabilities of the window.","Unfullscreen the window.","Unmaximize the window.","Get the <code>WindowState</code> for this configuration.","Get the associated <code>xdg_surface::XdgSurface</code> for content …","Get the associated <code>xdg_toplevel::XdgToplevel</code> for the …","","The name of the seat",""],"i":[1,2,2,2,3,0,4,4,5,0,4,0,4,0,6,0,1,3,0,0,0,5,2,1,3,3,2,3,0,0,2,0,1,1,1,1,2,2,2,0,7,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,5,8,6,9,1,3,2,10,11,4,7,12,5,8,6,9,1,3,2,10,11,4,7,12,5,8,9,1,3,5,8,9,1,3,7,1,3,7,1,3,1,3,10,9,1,3,9,12,11,12,1,3,1,3,1,3,9,5,8,8,6,9,1,1,1,1,1,3,3,3,3,3,2,10,11,4,7,12,5,5,8,6,9,1,3,2,2,10,11,4,7,12,1,3,1,3,1,3,1,3,7,1,3,1,3,1,3,1,3,5,8,6,9,1,3,2,10,11,4,7,12,1,3,1,3,7,0,7,8,7,1,3,9,11,1,3,1,3,7,7,1,3,7,1,3,7,7,7,7,7,7,7,7,7,7,7,1,3,1,3,1,3,7,5,8,9,1,3,8,1,3,7,5,8,6,9,1,3,2,10,11,4,7,12,5,8,6,9,1,3,2,10,11,4,7,12,5,8,6,9,1,3,2,10,11,4,7,12,1,3,7,7,7,10,7,7,13,14,15],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["wlseat",3],["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["windowstate",3]]],[[["capabilities",3]]],[[]],[[]],[[],["libdecor_window_state",6]],[[],["libdecor_capabilities",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["errorkind",4]],[[],["error",3]],[[],["context",3]],[[],["windowstate",3]],[[],["capabilities",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["windowstate",3]],["ordering",4]],[[["capabilities",3]],["ordering",4]],[[["option",4,["configuration"]],["state",3],["configuration",3]]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["frameref",3]],["option",4]],[[["wlsurface",3]],[["option",4,["frame"]],["frame",3]]],[[]],[[]],[[["option",4,["duration"]],["duration",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[["windowstate",3]],["bool",15]],[[["capabilities",3]],["bool",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["rawfd",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["libdecor_error",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["libdecor_resize_edge",6]]],[[]],[[]],[[]],[[]],[[]],[[["libdecor_window_state",6]],["option",4]],[[["libdecor_capabilities",6]],["option",4]],[[["libdecor_window_state",6]]],[[["libdecor_capabilities",6]]],[[["libdecor_window_state",6]]],[[["libdecor_capabilities",6]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["capabilities",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["errorkind",4]],[[]],[[["windowstate",3]],["bool",15]],[[["capabilities",3]],["bool",15]],[[["display",3]]],[[["i32",15]]],[[]],[[]],[[["windowstate",3]],[["option",4,["ordering"]],["ordering",4]]],[[["capabilities",3]],[["option",4,["ordering"]],["ordering",4]]],[[["str",15],["asref",8,["str"]]]],[[["str",15],["asref",8,["str"]]]],[[]],[[]],[[["resizeedge",4],["wlseat",3],["u32",15]]],[[["bool",15]]],[[["bool",15]]],[[["str",15],["asref",8,["str"]]]],[[["capabilities",3]]],[[["wloutput",3],["option",4,["wloutput"]]]],[[["i32",15]]],[[]],[[["i32",15]]],[[]],[[["frameref",3]]],[[["str",15],["asref",8,["str"]]]],[[["bool",15]]],[[["i32",15],["u32",15],["wlseat",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[["i32",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["capabilities",3]]],[[]],[[]],[[],[["windowstate",3],["option",4,["windowstate"]]]],[[],[["xdgsurface",3],["option",4,["xdgsurface"]]]],[[],[["option",4,["xdgtoplevel"]],["xdgtoplevel",3]]],null,null,null],"p":[[3,"WindowState"],[4,"ResizeEdge"],[3,"Capabilities"],[4,"FrameRequest"],[4,"ErrorKind"],[4,"Request"],[3,"FrameRef"],[3,"Error"],[3,"Context"],[3,"Configuration"],[3,"State"],[3,"Frame"],[13,"Configure"],[13,"DismissPopup"],[13,"Error"]]},\
"libdecor_sys":{"doc":"","t":[17,17,17,17,17,17,17,3,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,4,6,6,6,4,12,12,6,12,6,12,6,6,4,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,6,4,12,12,12,6,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,4,4,4,4,4],"n":["LIBDECOR_ACTION_CLOSE","LIBDECOR_ACTION_FULLSCREEN","LIBDECOR_ACTION_MINIMIZE","LIBDECOR_ACTION_MOVE","LIBDECOR_ACTION_RESIZE","LIBDECOR_ERROR_COMPOSITOR_INCOMPATIBLE","LIBDECOR_ERROR_INVALID_FRAME_CONFIGURATION","LIBDECOR_HANDLE","LIBDECOR_OPTION","LIBDECOR_RESIZE_EDGE_BOTTOM","LIBDECOR_RESIZE_EDGE_BOTTOM_LEFT","LIBDECOR_RESIZE_EDGE_BOTTOM_RIGHT","LIBDECOR_RESIZE_EDGE_LEFT","LIBDECOR_RESIZE_EDGE_NONE","LIBDECOR_RESIZE_EDGE_RIGHT","LIBDECOR_RESIZE_EDGE_TOP","LIBDECOR_RESIZE_EDGE_TOP_LEFT","LIBDECOR_RESIZE_EDGE_TOP_RIGHT","LIBDECOR_WINDOW_STATE_ACTIVE","LIBDECOR_WINDOW_STATE_FULLSCREEN","LIBDECOR_WINDOW_STATE_MAXIMIZED","LIBDECOR_WINDOW_STATE_NONE","LIBDECOR_WINDOW_STATE_TILED_BOTTOM","LIBDECOR_WINDOW_STATE_TILED_LEFT","LIBDECOR_WINDOW_STATE_TILED_RIGHT","LIBDECOR_WINDOW_STATE_TILED_TOP","Libdecor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","close","commit","configure","deref","deref","dismiss_popup","error","ffi_dispatch","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_lib_available","libdecor","libdecor_capabilities","libdecor_close_callback","libdecor_commit_callback","libdecor_configuration","libdecor_configuration_get_content_size","libdecor_configuration_get_window_state","libdecor_configure_callback","libdecor_decorate","libdecor_dismiss_popup_callback","libdecor_dispatch","libdecor_error","libdecor_error_callback","libdecor_frame","libdecor_frame_close","libdecor_frame_commit","libdecor_frame_get_title","libdecor_frame_get_xdg_surface","libdecor_frame_get_xdg_toplevel","libdecor_frame_has_capability","libdecor_frame_interface","libdecor_frame_is_floating","libdecor_frame_is_visible","libdecor_frame_map","libdecor_frame_move","libdecor_frame_popup_grab","libdecor_frame_popup_ungrab","libdecor_frame_ref","libdecor_frame_resize","libdecor_frame_set_app_id","libdecor_frame_set_capabilities","libdecor_frame_set_fullscreen","libdecor_frame_set_max_content_size","libdecor_frame_set_maximized","libdecor_frame_set_min_content_size","libdecor_frame_set_minimized","libdecor_frame_set_parent","libdecor_frame_set_title","libdecor_frame_set_visibility","libdecor_frame_show_window_menu","libdecor_frame_translate_coordinate","libdecor_frame_unref","libdecor_frame_unset_capabilities","libdecor_frame_unset_fullscreen","libdecor_frame_unset_maximized","libdecor_get_fd","libdecor_interface","libdecor_new","libdecor_resize_edge","libdecor_state","libdecor_state_free","libdecor_state_new","libdecor_unref","libdecor_window_state","open","reserved0","reserved0","reserved1","reserved1","reserved2","reserved2","reserved3","reserved3","reserved4","reserved4","reserved5","reserved5","reserved6","reserved6","reserved7","reserved7","reserved8","reserved8","reserved9","reserved9","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wl_display","wl_output","wl_seat","wl_surface","xdg_surface","xdg_toplevel"],"q":["libdecor_sysd":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The window was requested to be closed by the compositor.","The window decoration asked to have the main surface to be …","A new configuration was received. An application should …","","","Any mapped popup that has a grab on the given seat should …","An error event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Interface for integrating a Wayland surface with libdecor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,11,12,11,12,12,12,12,14,15,12,11,0,11,12,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0,0,0,0,0,0,13,13,0,13,0,13,0,0,0,13,13,13,13,13,13,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,13,0,0,13,13,13,0,13,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["libdecor_interface",3]],[[],["libdecor_frame_interface",3]],[[]],[[]],null,null,null,[[],["option",4]],[[],["libdecor",3]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["result",4,["libdecor","dlerror"]],["dlerror",4],["libdecor",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null],"p":[[4,"libdecor"],[4,"libdecor_frame"],[4,"libdecor_configuration"],[4,"libdecor_state"],[4,"wl_seat"],[4,"wl_display"],[4,"wl_surface"],[4,"wl_output"],[4,"xdg_surface"],[4,"xdg_toplevel"],[3,"libdecor_interface"],[3,"libdecor_frame_interface"],[3,"Libdecor"],[3,"LIBDECOR_OPTION"],[3,"LIBDECOR_HANDLE"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};